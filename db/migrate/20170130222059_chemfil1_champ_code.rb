include MigrationHelper

class Chemfil1ChampCode < ActiveRecord::Migration
  def up
    sql = <<-SQL
-- ----------------------------------------------------------------------------
-- Table CHEMFIL1.`Champ Code Table`
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `champ_code` (
  `ID` LONG,
  `DATE SETUP` DATETIME NULL,
  `PRODUCT CODE` VARCHAR(255) NULL,
  `PRODUCT NAME` VARCHAR(255) NULL,
  `DESCRIPTION` VARCHAR(255) NULL,
  `WEIGHT` DOUBLE NULL,
  `SPEC GRAV` DOUBLE NULL,
  `INVENTCODE` VARCHAR(255) NULL,
  `PASSTHROUGHRAWCHAMPCODE` VARCHAR(255) NULL,
  `CLASS` VARCHAR(255) NULL,
  `Sales Class` VARCHAR(255) NULL,
  `Margin` DOUBLE NULL,
  `GP TARGET` DECIMAL(19,4) NULL,
  `StandardProduct` TINYINT(1) NOT NULL DEFAULT 1,
  `ActiveCode` TINYINT(1) NOT NULL DEFAULT 1,
  `BRAND` VARCHAR(255) NULL,
  `LABEL NAME` VARCHAR(255) NULL,
  `LABEL RAW` VARCHAR(255) NULL,
  `PACKAGING MO` VARCHAR(255) NULL,
  `VOLUME` DOUBLE NULL,
  `FILLKG` DOUBLE NULL,
  `EACHCONTAINEREXTENSION` VARCHAR(255) NULL,
  `KGCONTAINEREXTENSION` VARCHAR(255) NULL,
  `SELL PRICE DATE` DATETIME NULL,
  `SELL PRICE COMMENTS` VARCHAR(255) NULL,
  `EACH SELL PRICE` DECIMAL(19,4) NULL,
  `DEFAULTSELLUNITS` VARCHAR(255) NULL,
  `SELLMETHOD` VARCHAR(255) NULL,
  `PURPOSE` VARCHAR(255) NULL,
  `FAB HEADER` VARCHAR(255) NULL,
  `FAB` VARCHAR(255) NULL,
  `MOU` VARCHAR(255) NULL,
  `INVENTORY METHOD` VARCHAR(255) NULL,
  `DYNAMICSELLMETHOD` LONG NULL,
  `TEMPSELL` DECIMAL(19,4) NULL,
  `6MOAVGBATCHCOST` DECIMAL(19,4) NULL,
  `TEMPTHEORETICALCOST` DECIMAL(19,4) NULL,
  `LASTBATCHCOST` DECIMAL(19,4) NULL,
  `LASTBATCHDATE` DATETIME NULL,
  INDEX `INVENTCODE` (`INVENTCODE` ASC),
  INDEX `PASSTHROUGHRAWCHAMPCODE` (`PASSTHROUGHRAWCHAMPCODE` ASC));
  -- PRIMARY KEY (`PRODUCT CODE`)); -- has NULLs
SQL

    Chemfil1Migration.execute(sql)
  end

  def down
    @connection = Chemfil1Migration.establish_connection.connection
    drop_table :champ_code
  end
end
