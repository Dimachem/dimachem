continue
next
r.count
next
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_DIMACHEM").to_a
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
next
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
continue
next
formula
next
::Formula.count
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_DIMACHEM").to_a
next
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_DIMACHEM").to_a
exit
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_DIMACHEM").to_a
eval ActiveRecord::Base.connection.execute(sql)
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
next
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
next
continue
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
continue
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
continue
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
continue
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
eval ActiveRecord::Base.connection.reset!
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
continue
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
eval ActiveRecord::Base.connection.reset!
eval ActiveRecord::Base.connection.reset
eval ActiveRecord::Base.connection.methods
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
continue
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1").to_a
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1")
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1;")
eval ActiveRecord::Base.connection.execute("SELECT @TRIGGER_CHECKS_CHEMFIL1;").to_a
continue
r.count
next
continue
formula
r.count
r
rr
next
r.to_a
r
next
continue
r.count
next
continue
next
continue
next
r
next
continue
r.count
eval r = ActiveRecord::Base.connection.raw_connection.query(sql, as: :hash)
r.count
r
next
exit
e
next
continue
eval r
r
next
continue
eval formula
next
continue
eval @data
eval formula
next
continue
eval formula
next
continue
eval formula
next
continue
eval ::Formula.all
eval ::Formula.find_by_code(@data[:insert][:code])
eval ActiveRecord::Base.connection.execute(sql)
continue
eval ActiveRecord::Base.connection.execute(sql)
continue
exit
eval ActiveRecord::Base.connection.execute(sql)
eval ActiveRecord::Base.connection.raw_connection.query(sql, as: :hash)
eval ::Formula.count
eval r
continue
exit
eval r.to_a.first[0]
eval r.to_a.first
pry
eval r.to_a
eval r
next
continue
eval ActiveRecord::Base.connection.raw_connection
eval ActiveRecord::Base.connection
eval sql
eval r
continue
eval formula
quit
help
exit
ActiveRecord::Base.connection.raw_connection
eval r.to_a[0]
eval r.to_a
eval r.to_h
eval r
next
eval formula
exit
eval sync_db
eval db_config
